version: "3.8"

services:
  postgres_db:
    container_name: core_pg_db
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${MASTER_DB_USER}
      - POSTGRES_PASSWORD=${MASTER_DB_PASSWORD}
      - POSTGRES_DB=${MASTER_DB_NAME}
    volumes:
      - prod_postgres_data:/var/lib/postgresql/data/
    restart: always

  server:
    container_name: go_server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - postgres_db
    links:
      - postgres_db:postgres_db
    restart: on-failure
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  prod_postgres_data:
